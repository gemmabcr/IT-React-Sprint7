{"ast":null,"code":"var _jsxFileName = \"/Users/gemmabcr/Documents/GitHub/IT-React-Sprint7/pressupost/src/components/Dialog/DialogProvider.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport DialogContext from \"../context/dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DialogProvider(_ref) {\n  _s();\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    text: \"\",\n    handler: null\n  });\n  return /*#__PURE__*/_jsxDEV(DialogContext.Provider, {\n    value: {\n      dialog,\n      setDialog\n    },\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(DialogProvider, \"4zKS6XRzefu0+ypbnjN6wXE8aHw=\");\n_c = DialogProvider;\nexport default DialogProvider;\nvar _c;\n$RefreshReg$(_c, \"DialogProvider\");","map":{"version":3,"names":["useState","DialogContext","DialogProvider","children","props","dialog","setDialog","isOpen","text","handler"],"sources":["/Users/gemmabcr/Documents/GitHub/IT-React-Sprint7/pressupost/src/components/Dialog/DialogProvider.js"],"sourcesContent":["import { useState } from \"react\";\nimport DialogContext from \"../context/dialog\";\n\nfunction DialogProvider({ children, ...props }) {\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    text: \"\",\n    handler: null,\n  });\n\n  return (\n    <DialogContext.Provider value={{ dialog, setDialog }} {...props}>\n      {children}\n    </DialogContext.Provider>\n  );\n}\n\nexport default DialogProvider;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,mBAAmB;AAAC;AAE9C,SAASC,cAAc,OAAyB;EAAA;EAAA,IAAxB;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAC;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC;IACnCO,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,oBACE,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEJ,MAAM;MAAEC;IAAU,CAAE;IAAA,GAAKF,KAAK;IAAA,UAC5DD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE7B;AAAC,GAZQD,cAAc;AAAA,KAAdA,cAAc;AAcvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}